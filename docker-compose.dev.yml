version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mappletask
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    command: sh -c "cd apps/server && yarn prisma generate && yarn dev"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mappletask?schema=public
      JWT_SECRET: dev-secret-key
      PORT: 3001
      NODE_ENV: development
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    command: sh -c "cd apps/web && yarn dev"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    depends_on:
      - server

volumes:
  postgres-data:
  node_modules: